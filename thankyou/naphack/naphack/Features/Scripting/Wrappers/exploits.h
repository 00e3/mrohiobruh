#pragma once

#include "../../Rage/TickbaseShift.hpp"

namespace Wrappers::Exploits {

	int GetProcessTicks( ) {
		return g_TickbaseController.m_iProcessTicks;
	}

	int GetMaxProcessTicks( ) {
		return g_TickbaseController.m_iMaxProcessTicks;
	}

	bool DidShift( ) {
		return 0;//return g_TickbaseController.Using( );
	}

	bool PerformingDefensive( ) {
		return g_TickbaseController.m_bPerformDefensive && g_TickbaseController.m_nBreakLCCorrection >= 0;
	}

	void ForceRecharge( ) {
		g_TickbaseController.m_bForceRecharge = true;
		//g_TickbaseController.m_flLastExploitTime = g_pGlobalVars->realtime;

		g_TickbaseController.UnCharge( false );
		g_TickbaseController.Charge( );
	}

	void ForceUncharge( ) {
		g_TickbaseController.UnCharge( true );
	}

	bool IsCharging( ) {
		return g_TickbaseController.m_iProcessTicks && g_TickbaseController.m_iProcessTicks < g_TickbaseController.m_iMaxProcessTicks;
	}

	bool IsReady( ) {
		return g_TickbaseController.IsCharged( );
	}

}

namespace Wrappers::AntiAim {

}